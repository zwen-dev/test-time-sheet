App\Entity\Timesheet:
    exclusion_policy: All
    custom_accessor_order: [id, begin, end, duration, rate, activity, project, user, description, fixedRate, hourlyRate, tags, exported, metaFields]
    properties:
        id:
            include: true
        begin:
            exclude: true
        end:
            exclude: true
        duration:
            include: true
        description:
            include: true
        rate:
            include: true
        fixedRate:
            include: true
            groups: [Entity]
        hourlyRate:
            include: true
            groups: [Entity]
        exported:
            include: true
            groups: [Entity]
        activity:
            groups: [Subresource]
        project:
            groups: [Subresource]
        user:
            exclude: true
        metaFields:
            exclude: true
    virtual_properties:
        getBegin:
            serialized_name: begin
            exp: "object.getBegin() === null ? null : object.getBegin()"
            type: DateTime
        getEnd:
            serialized_name: end
            exp: "object.getEnd() === null ? null : object.getEnd()"
            type: DateTime
        getActivity:
            serialized_name: activity
            exp: "object.getActivity() === null ? null : object.getActivity().getId()"
            type: integer
            groups: [Entity, Collection]
        getProject:
            serialized_name: project
            exp: "object.getProject() === null ? null : object.getProject().getId()"
            type: integer
            groups: [Entity, Collection]
        getUser:
            serialized_name: user
            exp: "object.getUser().getId()"
            type: integer
        getTags:
            serialized_name: tags
            exp: "object.getTagsAsArray()"
            type: array<string>
        getMetaFields:
            serialized_name: metaFields
            exp: "object.getVisibleMetaFields()"
            type: array<App\Entity\TimesheetMeta>
            groups: [Default]
